{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","services/dataApi.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","term","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","this","className","type","name","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","handleClick","openModal","largeImageURL","onClick","src","webformatURL","alt","ImageGallery","data","map","id","Button","fetchDataWithQuery","query","page","TOKEN","axios","get","then","response","hits","propTypes","PropTypes","string","isRequired","number","Modal","closeModal","code","nodeName","modalClose","window","addEventListener","removeEventListener","App","loading","error","fetchData","DataApi","length","prevState","catch","finally","onSubmitForm","querySearch","prevProps","scrollTo","top","document","documentElement","scrollHeight","scrollTop","behavior","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.98a8e5f5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n  state = {\n    term: \"\",\n  };\n  handleChange = (e) => {\n    this.setState({\n      term: e.target.value,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.term);\n    this.setState({\n      term: \"\",\n    });\n  };\n  render() {\n    const { term } = this.state;\n    return (\n      <>\n        <header className=\"Searchbar\">\n          <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n            <button type=\"submit\" className=\"SearchForm-button\">\n              <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n            <input\n              value={term}\n              name=\"term\"\n              className=\"SearchForm-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search images and photos\"\n              onChange={this.handleChange}\n            />\n          </form>\n        </header>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ImageGalleryItem extends Component {\r\n  static propTypes = {\r\n    onClick: PropTypes.func,\r\n  };\r\n  handleClick = () => {\r\n    this.props.openModal(this.props.largeImageURL);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <li className=\"ImageGalleryItem\" onClick={this.handleClick}>\r\n          <img key={this.props.largeImageURL} src={this.props.webformatURL} alt=\"\" className=\"ImageGalleryItem-image\" />\r\n        </li>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem/ImageGalleryItem\";\r\nimport PropTypes from \"prop-types\";\r\n// import styles from \"../ImageGallery/ImageGallery.module.css\";\r\n\r\nfunction ImageGallery({ data, openModal }) {\r\n  return (\r\n    <>\r\n      <ul className=\"ImageGallery\">\r\n        {data.map((e) => {\r\n          return (\r\n            <ImageGalleryItem\r\n              openModal={openModal}\r\n              key={e.id}\r\n              largeImageURL={e.largeImageURL}\r\n              webformatURL={e.webformatURL}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImageGallery;\r\nImageGallery.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Button({ handleClick }) {\n  return (\n    <>\n      <button type=\"button\" className=\"Button\" onClick={handleClick}>\n        Load more\n      </button>\n    </>\n  );\n}\n\nexport default Button;\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n","import axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst fetchDataWithQuery = (query, page, TOKEN) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${query}&page=${page}&key=${TOKEN}&image_type=photo&orientation=horizontal&per_page=12`\r\n    )\r\n    .then((response) => response.data.hits);\r\n};\r\n\r\nfetchDataWithQuery.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  TOKEN: PropTypes.string.isRequired,\r\n};\r\nexport default { fetchDataWithQuery };\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = {\r\n    modal: PropTypes.func,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n  };\r\n  closeModal = (e) => {\r\n    if (e.code === \"Escape\" || e.target.nodeName !== \"IMG\") {\r\n      this.props.modalClose();\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.closeModal);\r\n    window.addEventListener(\"click\", this.closeModal);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.closeModal);\r\n    window.removeEventListener(\"click\", this.closeModal);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\">\r\n        <div className=\"Modal\">\r\n          <img src={this.props.largeImageURL} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\n\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Button from \"./components/Button/Button\";\nimport DataApi from \"./services/dataApi.js\";\nimport Loaders from \"react-loader-spinner\";\nimport Modal from \"./components/Modal/Modal\";\n\nexport default class App extends Component {\n  state = {\n    data: [],\n    loading: false,\n    error: null,\n    query: \"\",\n    page: 1,\n    TOKEN: \"18953391-242970f94fd4bfb72dd77b6d1\",\n    largeImageURL: null,\n  };\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.query;\n    const nextQuery = this.state.query;\n    if (prevQuery !== nextQuery) {\n      this.fetchData();\n    }\n    window.scrollTo({\n      top: document.documentElement.scrollHeight + document.documentElement.scrollTop,\n      behavior: \"smooth\",\n    });\n  }\n\n  fetchData = () => {\n    const { query, page, TOKEN } = this.state;\n    this.setState({\n      loading: true,\n    });\n    DataApi.fetchDataWithQuery(query, page, TOKEN)\n      .then((data) => {\n        if (data.length < 1) {\n          this.setState({ error: true });\n        } else {\n          this.setState((prevState) => ({\n            data: [...prevState.data, ...data],\n            page: prevState.page + 1,\n            error: false,\n          }));\n        }\n      })\n\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  };\n  onSubmitForm = (querySearch) => {\n    this.setState({\n      data: [],\n    });\n    this.setState({\n      query: querySearch,\n    });\n  };\n  openModal = (largeImageURL) => {\n    this.setState({\n      largeImageURL: largeImageURL,\n    });\n  };\n  modalClose = () => {\n    this.setState((prevState) => ({ largeImageURL: !prevState.largeImageURL }));\n  };\n\n  render() {\n    const { data, loading, error, largeImageURL } = this.state;\n\n    return (\n      <>\n        <Searchbar onSubmit={this.onSubmitForm} />\n        {error && <p>Whoops, something went wrong {error.message}</p>}\n        {loading && <Loaders />}\n        <ImageGallery data={data} openModal={this.openModal} />\n        {data.length > 0 && <Button handleClick={this.fetchData} />}\n        {largeImageURL && (\n          <Modal onSubmit={this.openModal} largeImageURL={largeImageURL} modalClose={this.modalClose} />\n        )}\n      </>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App  />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}